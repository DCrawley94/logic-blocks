const {
	tallyMinutes,
	sleepiestGuardData,
	createMinuteRef
} = require('../findSleepiestMinute');

describe('tallyMinutes', () => {
	test('should return object containing representation of minutes', () => {
		const expected = createMinuteRef();
		expect(tallyMinutes([])).toEqual(expected);
	});
	test('should work for single timeframe', () => {
		const timeframe = [
			{ log: 'falls asleep', date: new Date('1518-02-05T00:45:00.000Z') },
			{ log: 'wakes up', date: new Date('1518-02-05T00:51:00.000Z') }
		];
		expect(tallyMinutes(timeframe)).toEqual({
			0: 0,
			1: 0,
			2: 0,
			3: 0,
			4: 0,
			5: 0,
			6: 0,
			7: 0,
			8: 0,
			9: 0,
			10: 0,
			11: 0,
			12: 0,
			13: 0,
			14: 0,
			15: 0,
			16: 0,
			17: 0,
			18: 0,
			19: 0,
			20: 0,
			21: 0,
			22: 0,
			23: 0,
			24: 0,
			25: 0,
			26: 0,
			27: 0,
			28: 0,
			29: 0,
			30: 0,
			31: 0,
			32: 0,
			33: 0,
			34: 0,
			35: 0,
			36: 0,
			37: 0,
			38: 0,
			39: 0,
			40: 0,
			41: 0,
			42: 0,
			43: 0,
			44: 0,
			45: 1,
			46: 1,
			47: 1,
			48: 1,
			49: 1,
			50: 1,
			51: 0,
			52: 0,
			53: 0,
			54: 0,
			55: 0,
			56: 0,
			57: 0,
			58: 0,
			59: 0
		});
	});
	test('should work for 2 timeframes', () => {
		const timeframe = [
			{ log: 'falls asleep', date: new Date('1518-02-05T00:45:00.000Z') },
			{ log: 'wakes up', date: new Date('1518-02-05T00:51:00.000Z') },
			{ log: 'falls asleep', date: new Date('1518-02-06T00:13:00.000Z') },
			{ log: 'wakes up', date: new Date('1518-02-06T00:22:00.000Z') }
		];
		expect(tallyMinutes(timeframe)).toEqual({
			0: 0,
			1: 0,
			2: 0,
			3: 0,
			4: 0,
			5: 0,
			6: 0,
			7: 0,
			8: 0,
			9: 0,
			10: 0,
			11: 0,
			12: 0,
			13: 1,
			14: 1,
			15: 1,
			16: 1,
			17: 1,
			18: 1,
			19: 1,
			20: 1,
			21: 1,
			22: 0,
			23: 0,
			24: 0,
			25: 0,
			26: 0,
			27: 0,
			28: 0,
			29: 0,
			30: 0,
			31: 0,
			32: 0,
			33: 0,
			34: 0,
			35: 0,
			36: 0,
			37: 0,
			38: 0,
			39: 0,
			40: 0,
			41: 0,
			42: 0,
			43: 0,
			44: 0,
			45: 1,
			46: 1,
			47: 1,
			48: 1,
			49: 1,
			50: 1,
			51: 0,
			52: 0,
			53: 0,
			54: 0,
			55: 0,
			56: 0,
			57: 0,
			58: 0,
			59: 0
		});
	});
	test('should work for many timeframes', () => {
		expect(tallyMinutes(sleepiestGuardData)).toEqual({
			0: 0,
			1: 0,
			2: 1,
			3: 2,
			4: 3,
			5: 3,
			6: 4,
			7: 5,
			8: 5,
			9: 6,
			10: 6,
			11: 6,
			12: 7,
			13: 8,
			14: 9,
			15: 10,
			16: 10,
			17: 9,
			18: 10,
			19: 10,
			20: 10,
			21: 11,
			22: 11,
			23: 11,
			24: 12,
			25: 12,
			26: 12,
			27: 12,
			28: 12,
			29: 12,
			30: 12,
			31: 13,
			32: 13,
			33: 13,
			34: 12,
			35: 12,
			36: 12,
			37: 11,
			38: 12,
			39: 13,
			40: 14,
			41: 14,
			42: 13,
			43: 13,
			44: 14,
			45: 15,
			46: 13,
			47: 12,
			48: 9,
			49: 10,
			50: 8,
			51: 9,
			52: 6,
			53: 6,
			54: 5,
			55: 3,
			56: 2,
			57: 2,
			58: 2,
			59: 0
		});
	});
});
